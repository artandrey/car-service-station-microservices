version: '3.8'

services:
  discovery-server:
    build: ./discovery_server/
    container_name: discovery-server
    ports:
      - "8081:8081"
      - "127.0.0.1:3000:8081"
    environment:
      SERVER_PORT: 8081
      eureka.client.serviceUrl.defaultZone: 'http://discovery-server:8081/eureka/'
      eureka.instance.hostname: discovery-server
    healthcheck:
      test: curl --fail http://discovery-server:8081 || exit 1
      interval: 1s
      timeout: 3s
      retries: 30

  api_gateway:
    build: ./api_gateway/
    container_name: api_gateway
    depends_on:
      discovery-server:
        condition: service_healthy
    links:
      - discovery-server
    ports:
      - "8082:8082"
    environment:
      SERVER_PORT: 8082
      eureka.client.serviceUrl.defaultZone: 'http://discovery-server:8081/eureka/'
      keycloak.realm: car-service-realm
      keycloak.client: car-service
      keycloak.admin: admin
      keycloak.password: 1234
      keycloak.secret: Ge9Hg14J0fajXyQnHRCWlU0gNsCcih4t
      keycloak.url: http://keycloak:9000

  management_app:
    build: ./management_service/
    container_name: management_app
    ports:
      - "8080:8080"
    links:
      - api_gateway
    depends_on:
      management_postgres:
        condition: service_started
      discovery-server:
        condition: service_healthy
    environment:
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://management_postgres:5432/public
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      eureka.client.serviceUrl.defaultZone: 'http://discovery-server:8081/eureka/'
      gateway.url: ${GATEWAY_URL}

  management_postgres:
    image: postgres:latest
    container_name: management_postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: public
    ports:
      - "5432:5432"
    volumes:
      - management-postgres-data:/var/lib/postgresql/data
  payment_service:
    build: ./payment_service/
    container_name: payment_service
    ports:
      - "8084:8084"
    depends_on:
      payment_postgres:
        condition: service_started
      discovery-server:
        condition: service_healthy
    environment:
      SERVER_PORT: 8084
      SPRING_DATASOURCE_URL: jdbc:postgresql://payment_postgres:5432/public
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      eureka.client.serviceUrl.defaultZone: 'http://discovery-server:8081/eureka/'
      gateway.url: ${GATEWAY_URL}

  payment_postgres:
    image: postgres:latest
    container_name: payment_postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: public
    ports:
      - "5433:5432"
    volumes:
      - payment-postgres-data:/var/lib/postgresql/data
  knowledge_base:
    build: ./knowledge_base/
    container_name: knowledge_base
    ports:
      - "8085:8085"
    links:
      - discovery-server
      - knowledge-base-mongodb-filesore
    depends_on:
      knowledge_base_postgres:
        condition: service_started
      knowledge-base-mongodb-filesore:
        condition: service_started
      api_gateway:
        condition: service_started
      discovery-server:
        condition: service_healthy
    environment:
      SERVER_PORT: 8085
      SPRING_DATASOURCE_URL: jdbc:postgresql://knowledge_base_postgres:5432/public
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      eureka.client.serviceUrl.defaultZone: 'http://discovery-server:8081/eureka/'
      spring.ai.openai.api-key: ${OPEN_AI_API_KEY}
      spring.data.mongodb.uri: mongodb://root:123456@knowledge-base-mongodb-filesore:27017/filestore?authSource=admin
      gateway.url: ${GATEWAY_URL}


  knowledge_base_postgres:
    image: ankane/pgvector
    container_name: knowledge_base_postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: public
    ports:
      - "5434:5432"
    volumes:
      - knowledge-base-postgres-data:/var/lib/postgresql/data
  knowledge-base-mongodb-filesore:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123456
      - MONGO_INITDB_DATABASE=filestore
    volumes:
      - knowledge-base-mongo-filestore:/data/db

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    command:
      - "-v start-dev"
      - "--http-port=9000"
      - "--import-realm"
    ports:
      - "9000:9000"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 1234
    volumes:
      - ./keycloak:/opt/keycloak/data/import
  ai_assistant:
    build: ./ai_assistant/
    container_name: ai_assistant
    ports:
      - "8086:8086"
    links:
      - discovery-server
    depends_on:
      api_gateway:
        condition: service_started
      discovery-server:
        condition: service_healthy
      ai_assistant_postgres:
        condition: service_started
    environment:
      SERVER_PORT: 8086
      SPRING_DATASOURCE_URL: jdbc:postgresql://ai_assistant_postgres:5432/public
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      eureka.client.serviceUrl.defaultZone: 'http://discovery-server:8081/eureka/'
      spring.ai.openai.api-key: ${OPEN_AI_API_KEY}
      gateway.url: ${GATEWAY_URL}
  ai_assistant_postgres:
    image: ankane/pgvector
    container_name: ai_assistant_postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: public
    ports:
      - "5435:5432"
    volumes:
      - ai_assistant_postgres-data:/var/lib/postgresql/data

volumes:
  management-postgres-data:
  payment-postgres-data:
  knowledge-base-postgres-data:
  knowledge-base-mongo-filestore:
  ai_assistant_postgres-data:


